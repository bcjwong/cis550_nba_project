{"ast":null,"code":"var _jsxFileName = \"/Users/Hui/Desktop/22fall/550/cis550_nba_project/webpage/client/src/pages/PlayersPage.js\";\nimport React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { Table, Pagination, Select, Row, Col, Divider, Slider, Rate } from 'antd';\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\nimport MenuBar from '../components/MenuBar';\nimport { getPlayerSearch, getPlayer } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wideFormat = format('.3r');\nconst playerColumns = [{\n  title: 'Name',\n  dataIndex: 'Name',\n  key: 'Name',\n  sorter: (a, b) => a.Name.localeCompare(b.Name),\n  render: (text, row) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/players?id=${row.PlayerId}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 32\n  }, this)\n}, {\n  title: 'Nationality',\n  dataIndex: 'Nationality',\n  key: 'Nationality',\n  sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n}, {\n  title: 'Rating',\n  dataIndex: 'Rating',\n  key: 'Rating',\n  sorter: (a, b) => a.Rating - b.Rating\n}, // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\n// TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n{\n  title: 'Potential',\n  dataIndex: 'Potential',\n  key: 'Potential',\n  sorter: (a, b) => a.Potential - b.Potential\n}, // TASK 8: add a column for Club, with the ability to (alphabetically) sort \n{\n  title: 'Club',\n  dataIndex: 'Club',\n  key: 'Club',\n  sorter: (a, b) => a.Club.localeCompare(b.Club)\n}, // TASK 9: add a column for Value - no sorting required\n{\n  title: 'Value',\n  dataIndex: 'Value',\n  key: 'Value'\n}];\n\nclass PlayersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameQuery: '',\n      teamQuery: '',\n      seasonQuery: '',\n      ptsQuery: '',\n      atsQuery: '',\n      rbsQuery: '',\n      selectedPlayerId: window.location.search ? window.location.search.substring(1).split('=')[1] : 229594,\n      selectedPlayerDetails: null,\n      playersResults: []\n    };\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    this.handleNameQueryChange = this.handleNameQueryChange.bind(this);\n    this.handleSeasonQueryChange = this.handleSeasonQueryChange.bind(this);\n    this.handleTeamQueryChange = this.handleTeamQueryChange.bind(this);\n    this.goToPlayer = this.goToPlayer.bind(this);\n  }\n\n  handleNameQueryChange(event) {\n    this.setState({\n      nameQuery: event.target.value\n    });\n  }\n\n  handleSeasonQueryChange(event) {\n    // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({\n      seasonQuery: event.target.value\n    });\n  }\n\n  handleTeamQueryChange(event) {\n    // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({\n      teamQuery: event.target.value\n    });\n  }\n\n  goToPlayer(playerName) {\n    window.location = `/players?bame=${playerName}`;\n  }\n\n  updateSearchResults() {\n    //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    getPlayerSearch(this.state.nameQuery, this.state.teamQuery, this.state.seasonQuery, null, null).then(res => {\n      this.setState({\n        playersResults: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    getPlayerSearch(this.state.nameQuery, this.state.teamQuery, this.state.seasonQuery, null, null).then(res => {\n      this.setState({\n        playersResults: res.results\n      });\n    }); // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \n    // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \n\n    getPlayer(this.state.selectedPlayerName).then(res => {\n      this.setState({\n        selectedPlayerDetails: res.results[0]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          width: '80vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"Name\",\n                value: this.state.nameQuery,\n                onChange: this.handleNameQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Team Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"Team\",\n                value: this.state.teamQuery,\n                onChange: this.handleTeamQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Season\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"Season\",\n                value: this.state.seasonQuery,\n                onChange: this.handleSeasonQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: this.state.playersResults,\n        columns: playerColumns,\n        pagination: {\n          pageSizeOptions: [5, 10],\n          defaultPageSize: 5,\n          showQuickJumper: true\n        },\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), this.state.selectedPlayerDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 53\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PlayersPage;","map":{"version":3,"sources":["/Users/Hui/Desktop/22fall/550/cis550_nba_project/webpage/client/src/pages/PlayersPage.js"],"names":["React","Form","FormInput","FormGroup","Button","Card","CardBody","CardTitle","Progress","Table","Pagination","Select","Row","Col","Divider","Slider","Rate","RadarChart","format","MenuBar","getPlayerSearch","getPlayer","wideFormat","playerColumns","title","dataIndex","key","sorter","a","b","Name","localeCompare","render","text","row","PlayerId","Nationality","Rating","Potential","Club","PlayersPage","Component","constructor","props","state","nameQuery","teamQuery","seasonQuery","ptsQuery","atsQuery","rbsQuery","selectedPlayerId","window","location","search","substring","split","selectedPlayerDetails","playersResults","updateSearchResults","bind","handleNameQueryChange","handleSeasonQueryChange","handleTeamQueryChange","goToPlayer","event","setState","target","value","playerName","then","res","results","componentDidMount","selectedPlayerName","width","margin","marginTop","pageSizeOptions","defaultPageSize","showQuickJumper"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,IAA7C,EAAmDC,QAAnD,EAA6DC,SAA7D,EAAwEC,QAAxE,QAAwF,cAAxF;AAEA,SACIC,KADJ,EAEIC,UAFJ,EAGIC,MAHJ,EAIIC,GAJJ,EAKIC,GALJ,EAMIC,OANJ,EAOIC,MAPJ,EAQIC,IARJ,QASO,MATP;AAUA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAKA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,YAA3C;;AACA,MAAMC,UAAU,GAAGJ,MAAM,CAAC,KAAD,CAAzB;AAEA,MAAMK,aAAa,GAAG,CAClB;AACIC,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,SAAS,EAAE,MAFf;AAGIC,EAAAA,GAAG,EAAE,MAHT;AAIIC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAJtB;AAKIE,EAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,GAAP,kBAAe;AAAG,IAAA,IAAI,EAAG,eAAcA,GAAG,CAACC,QAAS,EAArC;AAAA,cAAyCF;AAAzC;AAAA;AAAA;AAAA;AAAA;AAL3B,CADkB,EAQlB;AACIT,EAAAA,KAAK,EAAE,aADX;AAEIC,EAAAA,SAAS,EAAE,aAFf;AAGIC,EAAAA,GAAG,EAAE,aAHT;AAIIC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACQ,WAAF,CAAcL,aAAd,CAA4BF,CAAC,CAACO,WAA9B;AAJtB,CARkB,EAclB;AACIZ,EAAAA,KAAK,EAAE,QADX;AAEIC,EAAAA,SAAS,EAAE,QAFf;AAGIC,EAAAA,GAAG,EAAE,QAHT;AAIIC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACS,MAAF,GAAWR,CAAC,CAACQ;AAJnC,CAdkB,EAqBlB;AACA;AACA;AACIb,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,SAAS,EAAE,WAFf;AAGIC,EAAAA,GAAG,EAAE,WAHT;AAIIC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACU,SAAF,GAAcT,CAAC,CAACS;AAJtC,CAvBkB,EA6BlB;AACA;AACId,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,SAAS,EAAE,MAFf;AAGIC,EAAAA,GAAG,EAAE,MAHT;AAIIC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACW,IAAF,CAAOR,aAAP,CAAqBF,CAAC,CAACU,IAAvB;AAJtB,CA9BkB,EAoClB;AACA;AACIf,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,SAAS,EAAE,OAFf;AAGIC,EAAAA,GAAG,EAAE;AAHT,CArCkB,CAAtB;;AA6CA,MAAMc,WAAN,SAA0BxC,KAAK,CAACyC,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,QAAQ,EAAE,EALD;AAMTC,MAAAA,QAAQ,EAAE,EAND;AAOTC,MAAAA,gBAAgB,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBF,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,SAAvB,CAAiC,CAAjC,EAAoCC,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAzB,GAA6E,MAPtF;AAQTC,MAAAA,qBAAqB,EAAE,IARd;AASTC,MAAAA,cAAc,EAAE;AATP,KAAb;AAaA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKE,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BF,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKG,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BH,IAA3B,CAAgC,IAAhC,CAA7B;AAEA,SAAKI,UAAL,GAAkB,KAAKA,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAIDC,EAAAA,qBAAqB,CAACI,KAAD,EAAQ;AACzB,SAAKC,QAAL,CAAc;AAAErB,MAAAA,SAAS,EAAEoB,KAAK,CAACE,MAAN,CAAaC;AAA1B,KAAd;AACH;;AAEDN,EAAAA,uBAAuB,CAACG,KAAD,EAAQ;AAC3B;AACA,SAAKC,QAAL,CAAc;AAAEnB,MAAAA,WAAW,EAAEkB,KAAK,CAACE,MAAN,CAAaC;AAA5B,KAAd;AACH;;AAEDL,EAAAA,qBAAqB,CAACE,KAAD,EAAQ;AACzB;AACA,SAAKC,QAAL,CAAc;AAAEpB,MAAAA,SAAS,EAAEmB,KAAK,CAACE,MAAN,CAAaC;AAA1B,KAAd;AACH;;AAEDJ,EAAAA,UAAU,CAACK,UAAD,EAAa;AACnBjB,IAAAA,MAAM,CAACC,QAAP,GAAmB,iBAAgBgB,UAAW,EAA9C;AACH;;AAEDV,EAAAA,mBAAmB,GAAG;AAClB;AACAvC,IAAAA,eAAe,CAAC,KAAKwB,KAAL,CAAWC,SAAZ,EAAuB,KAAKD,KAAL,CAAWE,SAAlC,EAA6C,KAAKF,KAAL,CAAWG,WAAxD,EAAqE,IAArE,EAA2E,IAA3E,CAAf,CAAgGuB,IAAhG,CAAqGC,GAAG,IAAI;AACxG,WAAKL,QAAL,CAAc;AAAER,QAAAA,cAAc,EAAEa,GAAG,CAACC;AAAtB,OAAd;AACH,KAFD;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBrD,IAAAA,eAAe,CAAC,KAAKwB,KAAL,CAAWC,SAAZ,EAAuB,KAAKD,KAAL,CAAWE,SAAlC,EAA6C,KAAKF,KAAL,CAAWG,WAAxD,EAAqE,IAArE,EAA2E,IAA3E,CAAf,CAAgGuB,IAAhG,CAAqGC,GAAG,IAAI;AACxG,WAAKL,QAAL,CAAc;AAAER,QAAAA,cAAc,EAAEa,GAAG,CAACC;AAAtB,OAAd;AACH,KAFD,EADgB,CAKhB;AACA;;AACAnD,IAAAA,SAAS,CAAC,KAAKuB,KAAL,CAAW8B,kBAAZ,CAAT,CAAyCJ,IAAzC,CAA8CC,GAAG,IAAI;AACjD,WAAKL,QAAL,CAAc;AAAET,QAAAA,qBAAqB,EAAEc,GAAG,CAACC,OAAJ,CAAY,CAAZ;AAAzB,OAAd;AACH,KAFD;AAGH;;AAEDxC,EAAAA,MAAM,GAAG;AACL,wBAEI;AAAA,8BAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE2C,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,QAAzB;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SAAb;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCAAc,QAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAAEF,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,MAAM,EAAE;AAAzB,eAAlB;AAAA,sCACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADU,eAEV,QAAC,SAAD;AAAW,gBAAA,WAAW,EAAC,MAAvB;AAA8B,gBAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWC,SAAhD;AAA2D,gBAAA,QAAQ,EAAE,KAAKgB;AAA1E;AAAA;AAAA;AAAA;AAAA,sBAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCAAc,QAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAAEc,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,MAAM,EAAE;AAAzB,eAAlB;AAAA,sCACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADU,eAEV,QAAC,SAAD;AAAW,gBAAA,WAAW,EAAC,MAAvB;AAA8B,gBAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWE,SAAhD;AAA2D,gBAAA,QAAQ,EAAE,KAAKiB;AAA1E;AAAA;AAAA;AAAA;AAAA,sBAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,kBALJ,eAUI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCAAc,QAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAAEY,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,MAAM,EAAE;AAAzB,eAAlB;AAAA,sCACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADU,eAEV,QAAC,SAAD;AAAW,gBAAA,WAAW,EAAC,QAAvB;AAAgC,gBAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWG,WAAlD;AAA+D,gBAAA,QAAQ,EAAE,KAAKe;AAA9E;AAAA;AAAA;AAAA;AAAA,sBAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAuBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAyBQ,QAAC,KAAD;AAAO,QAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWc,cAA9B;AAA8C,QAAA,OAAO,EAAEnC,aAAvD;AAAsE,QAAA,UAAU,EAAE;AAAEuD,UAAAA,eAAe,EAAC,CAAC,CAAD,EAAI,EAAJ,CAAlB;AAA2BC,UAAAA,eAAe,EAAE,CAA5C;AAA+CC,UAAAA,eAAe,EAAC;AAA/D,SAAlF;AAAyJ,QAAA,KAAK,EAAE;AAAEL,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,QAAzB;AAAmCC,UAAAA,SAAS,EAAE;AAA9C;AAAhK;AAAA;AAAA;AAAA;AAAA,cAzBR,eA0BI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cA1BJ,EA4BK,KAAKjC,KAAL,CAAWa,qBAAX,gBAAmC;AAAK,QAAA,KAAK,EAAE;AAAEkB,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,QAAzB;AAAmCC,UAAAA,SAAS,EAAE;AAA9C;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAnC,GAEQ,IA9Bb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAoCH;;AApGqC;;AAuG1C,eAAerC,WAAf","sourcesContent":["import React from 'react';\r\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\r\n\r\nimport {\r\n    Table,\r\n    Pagination,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Divider,\r\n    Slider,\r\n    Rate \r\n} from 'antd'\r\nimport { RadarChart } from 'react-vis';\r\nimport { format } from 'd3-format';\r\n\r\n\r\n\r\n\r\nimport MenuBar from '../components/MenuBar';\r\nimport { getPlayerSearch, getPlayer } from '../fetcher'\r\nconst wideFormat = format('.3r');\r\n\r\nconst playerColumns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'Name',\r\n        key: 'Name',\r\n        sorter: (a, b) => a.Name.localeCompare(b.Name),\r\n        render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\r\n    },\r\n    {\r\n        title: 'Nationality',\r\n        dataIndex: 'Nationality',\r\n        key: 'Nationality',\r\n        sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\r\n    },\r\n    {\r\n        title: 'Rating',\r\n        dataIndex: 'Rating',\r\n        key: 'Rating',\r\n        sorter: (a, b) => a.Rating - b.Rating\r\n\r\n    },\r\n    // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\r\n    // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\r\n    {\r\n        title: 'Potential',\r\n        dataIndex: 'Potential',\r\n        key: 'Potential',\r\n        sorter: (a, b) => a.Potential - b.Potential\r\n    },\r\n    // TASK 8: add a column for Club, with the ability to (alphabetically) sort \r\n    {\r\n        title: 'Club',\r\n        dataIndex: 'Club',\r\n        key: 'Club',\r\n        sorter: (a, b) => a.Club.localeCompare(b.Club)\r\n    },\r\n    // TASK 9: add a column for Value - no sorting required\r\n    {\r\n        title: 'Value',\r\n        dataIndex: 'Value',\r\n        key: 'Value',\r\n    }\r\n];\r\n\r\n\r\nclass PlayersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nameQuery: '',\r\n            teamQuery: '',\r\n            seasonQuery: '',\r\n            ptsQuery: '',\r\n            atsQuery: '',\r\n            rbsQuery: '',\r\n            selectedPlayerId: window.location.search ? window.location.search.substring(1).split('=')[1] : 229594,\r\n            selectedPlayerDetails: null,\r\n            playersResults: []\r\n\r\n        }\r\n\r\n        this.updateSearchResults = this.updateSearchResults.bind(this)\r\n        this.handleNameQueryChange = this.handleNameQueryChange.bind(this)\r\n        this.handleSeasonQueryChange = this.handleSeasonQueryChange.bind(this)\r\n        this.handleTeamQueryChange = this.handleTeamQueryChange.bind(this)\r\n\r\n        this.goToPlayer = this.goToPlayer.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    handleNameQueryChange(event) {\r\n        this.setState({ nameQuery: event.target.value })\r\n    }\r\n\r\n    handleSeasonQueryChange(event) {\r\n        // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ seasonQuery: event.target.value })\r\n    }\r\n\r\n    handleTeamQueryChange(event) {\r\n        // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ teamQuery: event.target.value })\r\n    }\r\n\r\n    goToPlayer(playerName) {\r\n        window.location = `/players?bame=${playerName}`\r\n    }\r\n\r\n    updateSearchResults() {\r\n        //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\r\n        getPlayerSearch(this.state.nameQuery, this.state.teamQuery, this.state.seasonQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        getPlayerSearch(this.state.nameQuery, this.state.teamQuery, this.state.seasonQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n\r\n        // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \r\n        // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \r\n        getPlayer(this.state.selectedPlayerName).then(res => {\r\n            this.setState({ selectedPlayerDetails: res.results[0] })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n\r\n                <MenuBar />\r\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\r\n                    <Row>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Name</label>\r\n                            <FormInput placeholder=\"Name\" value={this.state.nameQuery} onChange={this.handleNameQueryChange} />\r\n                        </FormGroup></Col>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Team Name</label>\r\n                            <FormInput placeholder=\"Team\" value={this.state.teamQuery} onChange={this.handleTeamQueryChange} />\r\n                        </FormGroup></Col>\r\n                        {/* TASK 26: Create a column for Club, using the elements and style we followed in the above two columns. Use the onChange method (handleClubQueryChange)  */}\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Season</label>\r\n                            <FormInput placeholder=\"Season\" value={this.state.seasonQuery} onChange={this.handleSeasonQueryChange} />\r\n                        </FormGroup></Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Form>\r\n                <Divider />\r\n                {/* TASK 24: Copy in the players table from the Home page, but use the following style tag: style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }} - this should be one line of code! */}\r\n                    <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }} style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}/>\r\n                <Divider />\r\n\r\n                {this.state.selectedPlayerDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n\r\n                </div> : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayersPage\r\n\r\n"]},"metadata":{},"sourceType":"module"}