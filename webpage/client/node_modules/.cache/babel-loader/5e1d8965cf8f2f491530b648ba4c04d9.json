{"ast":null,"code":"var _jsxFileName = \"/Users/yingzhe/Documents/GitHub/cis550_nba_project/webpage/client/src/pages/PlayersPage.js\";\nimport React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport MenuBar from '../components/MenuBar';\nimport { getPlayerSearch, getPlayer } from '../fetcher';\nimport { Table, Pagination, Select, Row, Col, Divider, Slider, Rate } from 'antd';\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst wideFormat = format('.3r');\nconst playerColumns = [{\n  title: 'Name',\n  dataIndex: 'Name',\n  key: 'Name',\n  sorter: (a, b) => a.Name.localeCompare(b.Name),\n  render: (text, row) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/players?id=${row.id}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 32\n  }, this)\n}, {\n  title: 'Team',\n  dataIndex: 'Team',\n  key: 'Team',\n  sorter: (a, b) => a.Team.localeCompare(b.Team)\n}, {\n  title: 'Season',\n  dataIndex: 'Season',\n  key: 'Season',\n  sorter: (a, b) => a.Season - b.Season\n}, {\n  title: 'AVG_PTS',\n  dataIndex: 'AVG_PTS',\n  key: 'AVG_PTS',\n  sorter: (a, b) => a.AVG_PTS - b.AVG_PTS\n}, {\n  title: 'AVG_AST',\n  dataIndex: 'AVG_AST',\n  key: 'AVG_AST',\n  sorter: (a, b) => a.AVG_AST - b.AVG_AST\n}, {\n  title: 'AVG_REB',\n  dataIndex: 'AVG_REB',\n  key: 'AVG_REB',\n  sorter: (a, b) => a.AVG_REB - b.AVG_REB\n}];\nconst getPlayerGameDetails = [{\n  title: 'Name',\n  dataIndex: 'Name',\n  key: 'Name',\n  sorter: (a, b) => a.Name.localeCompare(b.Name),\n  render: (text, row) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/players?id=${row.id}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 32\n  }, this)\n}, {\n  title: 'Season',\n  dataIndex: 'SEASON',\n  key: 'SEASON',\n  sorter: (a, b) => a.Season - b.Season\n}, {\n  title: 'Date',\n  dataIndex: 'Date',\n  key: 'Date',\n  sorter: (a, b) => a.Date.localeCompare(b.Date)\n}, {\n  title: 'MIN',\n  dataIndex: 'MIN',\n  key: 'MIN',\n  sorter: (a, b) => a.MIN.localeCompare(b.MIN)\n}, {\n  title: 'FG3_PCT',\n  dataIndex: 'FG3_PCT',\n  key: 'FG3_PCT',\n  sorter: (a, b) => a.FG3_PCT - b.FG3_PCT\n}, {\n  title: 'FG_PCT',\n  dataIndex: 'FG_PCT',\n  key: 'FG_PCT',\n  sorter: (a, b) => a.FG_PCT - b.FG_PCT\n}, {\n  title: 'FT_PCT',\n  dataIndex: 'FT_PCT',\n  key: 'FT_PCT',\n  sorter: (a, b) => a.FT_PCT - b.FT_PCT\n}, {\n  title: 'PTS',\n  dataIndex: 'PTS',\n  key: 'PTS',\n  sorter: (a, b) => a.PTS - b.PTS\n}, {\n  title: 'AST',\n  dataIndex: 'AST',\n  key: 'AST',\n  sorter: (a, b) => a.AST - b.AST\n}, {\n  title: 'REB',\n  dataIndex: 'REB',\n  key: 'REB',\n  sorter: (a, b) => a.REB - b.REB\n}];\n\nclass PlayersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameQuery: '',\n      teamQuery: '',\n      seasonQuery: '',\n      selectedPlayerId: window.location.search ? window.location.search.substring(1).split('=')[1] : 201166,\n      selectedPlayerDetails: [],\n      playersResults: []\n    };\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    this.handleNameQueryChange = this.handleNameQueryChange.bind(this);\n    this.handleSeasonQueryChange = this.handleSeasonQueryChange.bind(this);\n    this.handleTeamQueryChange = this.handleTeamQueryChange.bind(this);\n    this.goToPlayer = this.goToPlayer.bind(this);\n  }\n\n  handleNameQueryChange(event) {\n    this.setState({\n      nameQuery: event.target.value\n    });\n  }\n\n  handleSeasonQueryChange(event) {\n    // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({\n      seasonQuery: event.target.value\n    });\n  }\n\n  handleTeamQueryChange(event) {\n    // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\n    this.setState({\n      teamQuery: event.target.value\n    });\n  }\n\n  goToPlayer(playerName) {\n    window.location = `/players?bame=${playerName}`;\n  }\n\n  updateSearchResults() {\n    //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n    getPlayerSearch(this.state.nameQuery, this.state.teamQuery, this.state.seasonQuery, null, null).then(res => {\n      this.setState({\n        playersResults: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    getPlayerSearch(this.state.nameQuery, this.state.teamQuery, this.state.seasonQuery, null, null).then(res => {\n      this.setState({\n        playersResults: res.results\n      });\n    }); // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \n    // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \n\n    getPlayer(this.state.selectedPlayerId, null, null).then(res => {\n      this.setState({\n        selectedPlayerDetails: res.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          width: '80vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"Name\",\n                value: this.state.nameQuery,\n                onChange: this.handleNameQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Team Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"Team\",\n                value: this.state.teamQuery,\n                onChange: this.handleTeamQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Season\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"Season\",\n                value: this.state.seasonQuery,\n                onChange: this.handleSeasonQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '10vw'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: '4vh'\n                },\n                onClick: this.updateSearchResults,\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: this.state.playersResults,\n        columns: playerColumns,\n        pagination: {\n          pageSizeOptions: [5, 10],\n          defaultPageSize: 5,\n          showQuickJumper: true\n        },\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), this.state.selectedPlayerDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: this.state.selectedPlayerDetails,\n          columns: getPlayerGameDetails,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          },\n          style: {\n            width: '70vw',\n            margin: '0 auto',\n            marginTop: '2vh'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 53\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PlayersPage;","map":{"version":3,"sources":["/Users/yingzhe/Documents/GitHub/cis550_nba_project/webpage/client/src/pages/PlayersPage.js"],"names":["React","Form","FormInput","FormGroup","Button","Card","CardBody","CardTitle","Progress","MenuBar","getPlayerSearch","getPlayer","Table","Pagination","Select","Row","Col","Divider","Slider","Rate","RadarChart","format","Column","ColumnGroup","wideFormat","playerColumns","title","dataIndex","key","sorter","a","b","Name","localeCompare","render","text","row","id","Team","Season","AVG_PTS","AVG_AST","AVG_REB","getPlayerGameDetails","Date","MIN","FG3_PCT","FG_PCT","FT_PCT","PTS","AST","REB","PlayersPage","Component","constructor","props","state","nameQuery","teamQuery","seasonQuery","selectedPlayerId","window","location","search","substring","split","selectedPlayerDetails","playersResults","updateSearchResults","bind","handleNameQueryChange","handleSeasonQueryChange","handleTeamQueryChange","goToPlayer","event","setState","target","value","playerName","then","res","results","componentDidMount","width","margin","marginTop","pageSizeOptions","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\r\nimport MenuBar from '../components/MenuBar';\r\nimport { getPlayerSearch, getPlayer } from '../fetcher'\r\nimport {\r\n    Table,\r\n    Pagination,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Divider,\r\n    Slider,\r\n    Rate \r\n} from 'antd'\r\nimport { RadarChart } from 'react-vis';\r\nimport { format } from 'd3-format';\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\n\r\nconst wideFormat = format('.3r');\r\n\r\nconst playerColumns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'Name',\r\n        key: 'Name',\r\n        sorter: (a, b) => a.Name.localeCompare(b.Name),\r\n        render: (text, row) => <a href={`/players?id=${row.id}`}>{text}</a>\r\n    },\r\n    {\r\n        title: 'Team',\r\n        dataIndex: 'Team',\r\n        key: 'Team',\r\n        sorter: (a, b) => a.Team.localeCompare(b.Team)\r\n    },\r\n    {\r\n        title: 'Season',\r\n        dataIndex: 'Season',\r\n        key: 'Season',\r\n        sorter: (a, b) => a.Season - b.Season\r\n    },\r\n    {\r\n        title: 'AVG_PTS',\r\n        dataIndex: 'AVG_PTS',\r\n        key: 'AVG_PTS',\r\n        sorter: (a, b) => a.AVG_PTS - b.AVG_PTS\r\n    },\r\n    {\r\n        title: 'AVG_AST',\r\n        dataIndex: 'AVG_AST',\r\n        key: 'AVG_AST',\r\n        sorter: (a, b) => a.AVG_AST - b.AVG_AST\r\n    },{\r\n        title: 'AVG_REB',\r\n        dataIndex: 'AVG_REB',\r\n        key: 'AVG_REB',\r\n        sorter: (a, b) => a.AVG_REB - b.AVG_REB\r\n    },\r\n];\r\n\r\nconst getPlayerGameDetails = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'Name',\r\n        key: 'Name',\r\n        sorter: (a, b) => a.Name.localeCompare(b.Name),\r\n        render: (text, row) => <a href={`/players?id=${row.id}`}>{text}</a>\r\n    },\r\n    {\r\n        title: 'Season',\r\n        dataIndex: 'SEASON',\r\n        key: 'SEASON',\r\n        sorter: (a, b) => a.Season - b.Season\r\n    },\r\n    {\r\n        title: 'Date',\r\n        dataIndex: 'Date',\r\n        key: 'Date',\r\n        sorter: (a, b) => a.Date.localeCompare(b.Date)\r\n    },\r\n    {\r\n        title: 'MIN',\r\n        dataIndex: 'MIN',\r\n        key: 'MIN',\r\n        sorter: (a, b) => a.MIN.localeCompare(b.MIN)\r\n    },\r\n    {\r\n        title: 'FG3_PCT',\r\n        dataIndex: 'FG3_PCT',\r\n        key: 'FG3_PCT',\r\n        sorter: (a, b) => a.FG3_PCT - b.FG3_PCT\r\n    },\r\n    {\r\n        title: 'FG_PCT',\r\n        dataIndex: 'FG_PCT',\r\n        key: 'FG_PCT',\r\n        sorter: (a, b) => a.FG_PCT - b.FG_PCT\r\n    },\r\n    {\r\n        title: 'FT_PCT',\r\n        dataIndex: 'FT_PCT',\r\n        key: 'FT_PCT',\r\n        sorter: (a, b) => a.FT_PCT - b.FT_PCT\r\n    },\r\n    {\r\n        title: 'PTS',\r\n        dataIndex: 'PTS',\r\n        key: 'PTS',\r\n        sorter: (a, b) => a.PTS - b.PTS\r\n    },\r\n    {\r\n        title: 'AST',\r\n        dataIndex: 'AST',\r\n        key: 'AST',\r\n        sorter: (a, b) => a.AST - b.AST\r\n    },\r\n    {\r\n        title: 'REB',\r\n        dataIndex: 'REB',\r\n        key: 'REB',\r\n        sorter: (a, b) => a.REB - b.REB\r\n    }\r\n];\r\n\r\nclass PlayersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nameQuery: '',\r\n            teamQuery: '',\r\n            seasonQuery: '',\r\n            selectedPlayerId: window.location.search ? window.location.search.substring(1).split('=')[1] : 201166,\r\n            selectedPlayerDetails: [],\r\n            playersResults: []\r\n        }\r\n\r\n        this.updateSearchResults = this.updateSearchResults.bind(this)\r\n        this.handleNameQueryChange = this.handleNameQueryChange.bind(this)\r\n        this.handleSeasonQueryChange = this.handleSeasonQueryChange.bind(this)\r\n        this.handleTeamQueryChange = this.handleTeamQueryChange.bind(this)\r\n\r\n        this.goToPlayer = this.goToPlayer.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    handleNameQueryChange(event) {\r\n        this.setState({ nameQuery: event.target.value })\r\n    }\r\n\r\n    handleSeasonQueryChange(event) {\r\n        // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ seasonQuery: event.target.value })\r\n    }\r\n\r\n    handleTeamQueryChange(event) {\r\n        // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ teamQuery: event.target.value })\r\n    }\r\n\r\n    goToPlayer(playerName) {\r\n        window.location = `/players?bame=${playerName}`\r\n    }\r\n\r\n    updateSearchResults() {\r\n        //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\r\n        getPlayerSearch(this.state.nameQuery, this.state.teamQuery, this.state.seasonQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        getPlayerSearch(this.state.nameQuery, this.state.teamQuery, this.state.seasonQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n\r\n        // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \r\n        // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \r\n        getPlayer(this.state.selectedPlayerId, null, null).then(res => {\r\n            this.setState({ selectedPlayerDetails: res.results })        \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n\r\n                <MenuBar />\r\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\r\n                    <Row>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Name</label>\r\n                            <FormInput placeholder=\"Name\" value={this.state.nameQuery} onChange={this.handleNameQueryChange} />\r\n                        </FormGroup></Col>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Team Name</label>\r\n                            <FormInput placeholder=\"Team\" value={this.state.teamQuery} onChange={this.handleTeamQueryChange} />\r\n                        </FormGroup></Col>\r\n                        {/* TASK 26: Create a column for Club, using the elements and style we followed in the above two columns. Use the onChange method (handleClubQueryChange)  */}\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Season</label>\r\n                            <FormInput placeholder=\"Season\" value={this.state.seasonQuery} onChange={this.handleSeasonQueryChange} />\r\n                        </FormGroup></Col>\r\n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\r\n                            <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\r\n                        </FormGroup></Col>\r\n                    </Row>\r\n\r\n\r\n                </Form>\r\n                <Divider />\r\n                <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }} style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}/>\r\n                <Divider />\r\n\r\n                {this.state.selectedPlayerDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n                <Table dataSource={this.state.selectedPlayerDetails} columns={getPlayerGameDetails} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }} style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}/>\r\n                </div> : null}\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayersPage\r\n\r\n"]},"metadata":{},"sourceType":"module"}