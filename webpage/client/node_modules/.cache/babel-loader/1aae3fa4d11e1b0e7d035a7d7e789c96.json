{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/HomePage.js\";\nimport React from 'react';\nimport { Table, Pagination, Select } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers, getAllGames, getAllTeams } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\nconst playerColumns = [{\n  title: 'Name',\n  dataIndex: 'Name',\n  key: 'Name',\n  sorter: (a, b) => a.Name.localeCompare(b.Name),\n  render: (text, row) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/players?id=${row.PlayerId}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 28\n  }, this)\n}, {\n  title: 'Nationality',\n  dataIndex: 'Nationality',\n  key: 'Nationality',\n  sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n}, {\n  title: 'Rating',\n  dataIndex: 'Rating',\n  key: 'Rating',\n  sorter: (a, b) => a.Rating - b.Rating\n}, // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n{\n  title: 'Potential',\n  dataIndex: 'Potential',\n  key: 'Potential',\n  sorter: (a, b) => a.Potential - b.Potential\n}, // TASK 8: add a column for Club, with the ability to (alphabetically) sort \n{\n  title: 'Club',\n  dataIndex: 'Club',\n  key: 'Club',\n  sorter: (a, b) => a.Club.localeCompare(b.Club)\n}, // TASK 9: add a column for Value - no sorting required\n{\n  title: 'Value',\n  dataIndex: 'Value',\n  key: 'Value'\n}];\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gamesResults: [],\n      teamsResults: [],\n      matchesResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null\n    }; //--\n\n    this.seasonOnChange = this.seasonOnChange.bind(this);\n    this.goToGame = this.goToGame.bind(this);\n  } //---\n\n\n  goToGame(gameId) {\n    window.location = `/games?id=${gameId}`;\n  }\n\n  seasonOnChange(value) {\n    getAllGames(null, null, value).then(res => {\n      this.setState({\n        gamesResults: res.results\n      });\n    });\n  } //---\n  //---\n\n\n  componentDidMount() {\n    getAllTeams(null, null).then(res => {\n      this.setState({\n        teamsResults: res.results\n      });\n    });\n    getAllGames(null, null, 2021).then(res => {\n      this.setState({\n        gamesResults: res.results\n      });\n    });\n  } // componentDidMount() {\n  //   getAllMatches(null, null, 'D1').then(res => {\n  //     this.setState({ matchesResults: res.results })\n  //   })\n  //   getAllPlayers().then(res => {\n  //     console.log(res.results)\n  //     // TASK 1: set the correct state attribute to res.results\n  //     this.setState( {playersResults: res.results} )\n  //   })\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: this.state.playersResults,\n          columns: playerColumns,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"2021\",\n          style: {\n            width: 120\n          },\n          onChange: this.seasonOnChange,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"2021\",\n            children: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2020\",\n            children: \"2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2019\",\n            children: \"2019\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2018\",\n            children: \"2018\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2017\",\n            children: \"2017\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2016\",\n            children: \"2016\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2015\",\n            children: \"2015\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2014\",\n            children: \"2014\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2013\",\n            children: \"2013\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2012\",\n            children: \"2012\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2011\",\n            children: \"2011\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"2010\",\n            children: \"2010\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          onRow: (record, rowIndex) => {\n            return {\n              onClick: event => {\n                this.goToGame(record.GameId);\n              } // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n\n            };\n          },\n          dataSource: this.state.gamesResults,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          },\n          children: [/*#__PURE__*/_jsxDEV(ColumnGroup, {\n            title: \"Teams\",\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              title: \"Home\",\n              dataIndex: \"Home\",\n              sorter: (a, b) => a.Home.localeCompare(b.Home)\n            }, \"Home\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              title: \"Visitor\",\n              dataIndex: \"Visitor\",\n              sorter: (a, b) => a.Visitor.localeCompare(b.Visitor)\n            }, \"Visitor\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ColumnGroup, {\n            title: \"Points\",\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              title: \"HomePts\",\n              dataIndex: \"PTS_home\",\n              sorter: (a, b) => a.PTS_home > b.PTS_home\n            }, \"PTS_home\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              title: \"VisitorPts\",\n              dataIndex: \"PTS_away\",\n              sorter: (a, b) => a.PTS_away > b.PTS_away\n            }, \"PTS_away\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"Date\",\n            dataIndex: \"Date\"\n          }, \"Date\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  } // render() {\n  //   return (\n  //     <div>\n  //       <MenuBar />\n  //       <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n  //         <h3>Players</h3>\n  //         <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n  //       </div>\n  //       <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n  //         <h3>Matches</h3>\n  //         <Select defaultValue=\"D1\" style={{ width: 120 }} onChange={this.leagueOnChange}>\n  //           <Option value=\"D1\">Bundesliga</Option>\n  //            {/* TASK 3: Take a look at Dataset Information.md from MS1 and add other options to the selector here  */}\n  //            <Option value=\"SP1\">La Liga</Option>\n  //            <Option value=\"F1\">Ligue 1</Option>\n  //            <Option value=\"I1\">Serie A</Option>\n  //            <Option value=\"E0\">Premier League</Option>\n  //         </Select>\n  //         <Table onRow={(record, rowIndex) => {\n  //   return {\n  //     onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n  //   };\n  // }} dataSource={this.state.matchesResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n  //           <ColumnGroup title=\"Teams\">\n  //             {/* TASK 4: correct the title for the 'Home' column and add a similar column for 'Away' team in this ColumnGroup */}\n  //             <Column title=\"Home\" dataIndex=\"Home\" key=\"Home\" sorter= {(a, b) => a.Home.localeCompare(b.Home)}/>\n  //             <Column title=\"Away\" dataIndex=\"Away\" key=\"Away\" sorter= {(a, b) => a.Away.localeCompare(b.Away)}/>\n  //           </ColumnGroup>\n  //           <ColumnGroup title=\"Goals\">\n  //             {/* TASK 5: add columns for home and away goals in this ColumnGroup, with the ability to sort values in these columns numerically */}\n  //             <Column title=\"HomeGoals\" dataIndex=\"HomeGoals\" key=\"HomeGoals\" sorter= {(a, b) => a.HomeGoals > b.HomeGoals }/>\n  //             <Column title=\"AwayGoals\" dataIndex=\"AwayGoals\" key=\"AwayGoals\" sorter= {(a, b) => a.AwayGoals > b.AwayGoals}/>\n  //           </ColumnGroup>\n  //            {/* TASK 6: create two columns (independent - not in a column group) for the date and time. Do not add a sorting functionality */}\n  //           <Column title=\"Date\" dataIndex=\"Date\" key=\"Date\"/>\n  //           <Column title=\"Time\" dataIndex=\"Time\" key=\"Time\"/>\n  //         </Table>\n  //       </div>\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/HomePage.js"],"names":["React","Table","Pagination","Select","MenuBar","getAllMatches","getAllPlayers","getAllGames","getAllTeams","Column","ColumnGroup","Option","playerColumns","title","dataIndex","key","sorter","a","b","Name","localeCompare","render","text","row","PlayerId","Nationality","Rating","Potential","Club","HomePage","Component","constructor","props","state","gamesResults","teamsResults","matchesResults","matchesPageNumber","matchesPageSize","playersResults","pagination","seasonOnChange","bind","goToGame","gameId","window","location","value","then","res","setState","results","componentDidMount","width","margin","marginTop","pageSizeOptions","defaultPageSize","showQuickJumper","record","rowIndex","onClick","event","GameId","Home","Visitor","PTS_home","PTS_away"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Table,\n  Pagination,\n  Select\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers, getAllGames, getAllTeams} from '../fetcher'\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\n\nconst playerColumns = [\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n    key: 'Name',\n    sorter: (a, b) => a.Name.localeCompare(b.Name),\n    render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\n  },\n  {\n    title: 'Nationality',\n    dataIndex: 'Nationality',\n    key: 'Nationality',\n    sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n  },\n  {\n    title: 'Rating',\n    dataIndex: 'Rating',\n    key: 'Rating',\n    sorter: (a, b) => a.Rating - b.Rating\n  },\n  // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n  {\n    title: 'Potential',\n    dataIndex: 'Potential',\n    key: 'Potential',\n    sorter: (a, b) => a.Potential - b.Potential\n  },\n  // TASK 8: add a column for Club, with the ability to (alphabetically) sort \n  {\n    title: 'Club',\n    dataIndex: 'Club',\n    key: 'Club',\n    sorter: (a, b) => a.Club.localeCompare(b.Club)\n  },\n  // TASK 9: add a column for Value - no sorting required\n  {\n    title: 'Value',\n    dataIndex: 'Value',\n    key: 'Value',\n  }\n];\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      gamesResults:[],\n      teamsResults:[],\n      \n      matchesResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null\n\n    }\n\n    //--\n    this.seasonOnChange = this.seasonOnChange.bind(this)\n    this.goToGame = this.goToGame.bind(this)\n  }\n  //---\n  goToGame(gameId) {\n    window.location = `/games?id=${gameId}`\n  }\n\n  seasonOnChange(value) {\n    getAllGames(null,null,value).then(res=>{\n      this.setState({ gamesResults: res.results })\n    })\n  }\n  //---\n  //---\n  componentDidMount() {\n    getAllTeams(null, null).then(res => {\n      this.setState({ teamsResults: res.results })\n    })\n\n\n    getAllGames(null, null, 2021).then(res => {\n      this.setState({ gamesResults: res.results })\n    })\n  }\n\n\n  // componentDidMount() {\n  //   getAllMatches(null, null, 'D1').then(res => {\n  //     this.setState({ matchesResults: res.results })\n  //   })\n\n  //   getAllPlayers().then(res => {\n  //     console.log(res.results)\n  //     // TASK 1: set the correct state attribute to res.results\n  //     this.setState( {playersResults: res.results} )\n  //   })\n  // }\n\n  render() {\n\n    return (\n      <div>\n        <MenuBar />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Players</h3>\n          <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n        </div>\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n          <h3>Games</h3>\n          <Select defaultValue=\"2021\" style={{ width: 120 }} onChange={this.seasonOnChange}>\n            <Option value=\"2021\">2021</Option>\n            <Option value=\"2020\">2020</Option>\n            <Option value=\"2019\">2019</Option>\n            <Option value=\"2018\">2018</Option>\n            <Option value=\"2017\">2017</Option>\n            <Option value=\"2016\">2016</Option>\n            <Option value=\"2015\">2015</Option>\n            <Option value=\"2014\">2014</Option>\n            <Option value=\"2013\">2013</Option>\n            <Option value=\"2012\">2012</Option>\n            <Option value=\"2011\">2011</Option>\n            <Option value=\"2010\">2010</Option>\n          </Select>\n          \n          <Table onRow={(record, rowIndex) => {\n    return {\n      onClick: event => {this.goToGame(record.GameId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n    };\n  }} dataSource={this.state.gamesResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n            <ColumnGroup title=\"Teams\">\n              <Column title=\"Home\" dataIndex=\"Home\" key=\"Home\" sorter= {(a, b) => a.Home.localeCompare(b.Home)}/>\n              <Column title=\"Visitor\" dataIndex=\"Visitor\" key=\"Visitor\" sorter= {(a, b) => a.Visitor.localeCompare(b.Visitor)}/>\n            </ColumnGroup>\n            <ColumnGroup title=\"Points\">\n              <Column title=\"HomePts\" dataIndex=\"PTS_home\" key=\"PTS_home\" sorter= {(a, b) => a.PTS_home > b.PTS_home }/>\n              <Column title=\"VisitorPts\" dataIndex=\"PTS_away\" key=\"PTS_away\" sorter= {(a, b) => a.PTS_away > b.PTS_away}/>\n            </ColumnGroup>\n             {/* TASK 6: create two columns (independent - not in a column group) for the date and time. Do not add a sorting functionality */}\n            <Column title=\"Date\" dataIndex=\"Date\" key=\"Date\"/>\n          </Table>\n\n        </div>\n\n\n      </div>\n    )\n  }\n\n\n  // render() {\n\n  //   return (\n  //     <div>\n  //       <MenuBar />\n  //       <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n  //         <h3>Players</h3>\n  //         <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n  //       </div>\n  //       <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n  //         <h3>Matches</h3>\n  //         <Select defaultValue=\"D1\" style={{ width: 120 }} onChange={this.leagueOnChange}>\n  //           <Option value=\"D1\">Bundesliga</Option>\n  //            {/* TASK 3: Take a look at Dataset Information.md from MS1 and add other options to the selector here  */}\n  //            <Option value=\"SP1\">La Liga</Option>\n  //            <Option value=\"F1\">Ligue 1</Option>\n  //            <Option value=\"I1\">Serie A</Option>\n  //            <Option value=\"E0\">Premier League</Option>\n  //         </Select>\n          \n  //         <Table onRow={(record, rowIndex) => {\n  //   return {\n  //     onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n  //   };\n  // }} dataSource={this.state.matchesResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n  //           <ColumnGroup title=\"Teams\">\n  //             {/* TASK 4: correct the title for the 'Home' column and add a similar column for 'Away' team in this ColumnGroup */}\n  //             <Column title=\"Home\" dataIndex=\"Home\" key=\"Home\" sorter= {(a, b) => a.Home.localeCompare(b.Home)}/>\n  //             <Column title=\"Away\" dataIndex=\"Away\" key=\"Away\" sorter= {(a, b) => a.Away.localeCompare(b.Away)}/>\n  //           </ColumnGroup>\n  //           <ColumnGroup title=\"Goals\">\n  //             {/* TASK 5: add columns for home and away goals in this ColumnGroup, with the ability to sort values in these columns numerically */}\n  //             <Column title=\"HomeGoals\" dataIndex=\"HomeGoals\" key=\"HomeGoals\" sorter= {(a, b) => a.HomeGoals > b.HomeGoals }/>\n  //             <Column title=\"AwayGoals\" dataIndex=\"AwayGoals\" key=\"AwayGoals\" sorter= {(a, b) => a.AwayGoals > b.AwayGoals}/>\n  //           </ColumnGroup>\n  //            {/* TASK 6: create two columns (independent - not in a column group) for the date and time. Do not add a sorting functionality */}\n  //           <Column title=\"Date\" dataIndex=\"Date\" key=\"Date\"/>\n  //           <Column title=\"Time\" dataIndex=\"Time\" key=\"Time\"/>\n  //         </Table>\n\n  //       </div>\n\n\n  //     </div>\n  //   )\n  // }\n\n}\n\nexport default HomePage\n\n"]},"metadata":{},"sourceType":"module"}