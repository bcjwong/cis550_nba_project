[{"/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/index.js":"1","/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/HomePage.js":"2","/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/MatchesPage.js":"3","/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/PlayersPage.js":"4","/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/fetcher.js":"5","/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/components/MenuBar.js":"6","/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/TeamsPage.js":"7"},{"size":932,"mtime":1670858521239,"results":"8","hashOfConfig":"9"},{"size":5888,"mtime":1670858968604,"results":"10","hashOfConfig":"9"},{"size":12874,"mtime":1670862113684,"results":"11","hashOfConfig":"9"},{"size":16474,"mtime":1670110576946,"results":"12","hashOfConfig":"9"},{"size":3556,"mtime":1670857007033,"results":"13","hashOfConfig":"9"},{"size":1001,"mtime":1670858502906,"results":"14","hashOfConfig":"9"},{"size":12656,"mtime":1670110576946,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j71e05",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/index.js",[],"/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/HomePage.js",["32"],"/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/MatchesPage.js",["33"],"/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/PlayersPage.js",["34","35","36","37","38"],"import React from 'react';\r\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\r\n\r\nimport {\r\n    Table,\r\n    Pagination,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Divider,\r\n    Slider,\r\n    Rate \r\n} from 'antd'\r\nimport { RadarChart } from 'react-vis';\r\nimport { format } from 'd3-format';\r\n\r\n\r\n\r\n\r\nimport MenuBar from '../components/MenuBar';\r\nimport { getPlayerSearch, getPlayer } from '../fetcher'\r\nconst wideFormat = format('.3r');\r\n\r\nconst playerColumns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'Name',\r\n        key: 'Name',\r\n        sorter: (a, b) => a.Name.localeCompare(b.Name),\r\n        render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\r\n    },\r\n    {\r\n        title: 'Nationality',\r\n        dataIndex: 'Nationality',\r\n        key: 'Nationality',\r\n        sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\r\n    },\r\n    {\r\n        title: 'Rating',\r\n        dataIndex: 'Rating',\r\n        key: 'Rating',\r\n        sorter: (a, b) => a.Rating - b.Rating\r\n\r\n    },\r\n    // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\r\n    // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\r\n    {\r\n        title: 'Potential',\r\n        dataIndex: 'Potential',\r\n        key: 'Potential',\r\n        sorter: (a, b) => a.Potential - b.Potential\r\n    },\r\n    // TASK 8: add a column for Club, with the ability to (alphabetically) sort \r\n    {\r\n        title: 'Club',\r\n        dataIndex: 'Club',\r\n        key: 'Club',\r\n        sorter: (a, b) => a.Club.localeCompare(b.Club)\r\n    },\r\n    // TASK 9: add a column for Value - no sorting required\r\n    {\r\n        title: 'Value',\r\n        dataIndex: 'Value',\r\n        key: 'Value',\r\n    }\r\n];\r\n\r\n\r\nclass PlayersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nameQuery: '',\r\n            nationalityQuery: '',\r\n            clubQuery: '',\r\n            ratingHighQuery: 100,\r\n            ratingLowQuery: 0,\r\n            potHighQuery: 100,\r\n            potLowQuery: 0,\r\n            selectedPlayerId: window.location.search ? window.location.search.substring(1).split('=')[1] : 229594,\r\n            selectedPlayerDetails: null,\r\n            playersResults: []\r\n\r\n        }\r\n\r\n        this.updateSearchResults = this.updateSearchResults.bind(this)\r\n        this.handleNameQueryChange = this.handleNameQueryChange.bind(this)\r\n        this.handleNationalityQueryChange = this.handleNationalityQueryChange.bind(this)\r\n        this.handleClubQueryChange = this.handleClubQueryChange.bind(this)\r\n        this.handleRatingChange = this.handleRatingChange.bind(this)\r\n        this.handlePotentialChange = this.handlePotentialChange.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    handleNameQueryChange(event) {\r\n        this.setState({ nameQuery: event.target.value })\r\n    }\r\n\r\n    handleClubQueryChange(event) {\r\n        // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ clubQuery: event.target.value })\r\n    }\r\n\r\n    handleNationalityQueryChange(event) {\r\n        // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ nationalityQuery: event.target.value })\r\n    }\r\n\r\n    handleRatingChange(value) {\r\n        this.setState({ ratingLowQuery: value[0] })\r\n        this.setState({ ratingHighQuery: value[1] })\r\n    }\r\n\r\n    handlePotentialChange(value) {\r\n        // TASK 22: parse value and update state variables appropriately. See handleRatingChange(value) for reference\r\n        this.setState({ potLowQuery: value[0] })\r\n        this.setState({ potHighQuery: value[1] })\r\n    }\r\n\r\n    updateSearchResults() {\r\n        //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\r\n        getPlayerSearch(this.state.nameQuery, this.state.nationalityQuery, this.state.clubQuery, this.state.ratingHighQuery, this.state.ratingLowQuery, this.state.potHighQuery, this.state.potLowQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        getPlayerSearch(this.state.nameQuery, this.state.nationalityQuery, this.state.clubQuery, this.state.ratingHighQuery, this.state.ratingLowQuery, this.state.potHighQuery, this.state.potLowQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n\r\n        // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \r\n        // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \r\n        getPlayer(this.state.selectedPlayerId).then(res => {\r\n            this.setState({ selectedPlayerDetails: res.results[0] })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n\r\n                <MenuBar />\r\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\r\n                    <Row>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Name</label>\r\n                            <FormInput placeholder=\"Name\" value={this.state.nameQuery} onChange={this.handleNameQueryChange} />\r\n                        </FormGroup></Col>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Nationality</label>\r\n                            <FormInput placeholder=\"Nationality\" value={this.state.nationalityQuery} onChange={this.handleNationalityQueryChange} />\r\n                        </FormGroup></Col>\r\n                        {/* TASK 26: Create a column for Club, using the elements and style we followed in the above two columns. Use the onChange method (handleClubQueryChange)  */}\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Club</label>\r\n                            <FormInput placeholder=\"Club\" value={this.state.clubQuery} onChange={this.handleClubQueryChange} />\r\n                        </FormGroup></Col>\r\n\r\n                    </Row>\r\n                    <br></br>\r\n                    <Row>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Rating</label>\r\n                            <Slider range defaultValue={[50, 100]} onChange={this.handleRatingChange} />\r\n                        </FormGroup></Col>\r\n                        {/* TASK 27: Create a column with a label and slider in a FormGroup item for filtering by Potential. See the column above for reference and use the onChange method (handlePotentialChange)  */}\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Potential</label>\r\n                            <Slider range defaultValue={[50, 100]} onChange={this.handlePotentialChange} />\r\n                        </FormGroup></Col>\r\n\r\n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\r\n                            <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\r\n                        </FormGroup></Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Form>\r\n                <Divider />\r\n                {/* TASK 24: Copy in the players table from the Home page, but use the following style tag: style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }} - this should be one line of code! */}\r\n                    <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }} style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}/>\r\n                <Divider />\r\n\r\n                {this.state.selectedPlayerDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n                    <Card>\r\n                    \r\n                        <CardBody>\r\n                        <Row gutter='30' align='middle' justify='center'>\r\n                            <Col flex={2} style={{ textAlign: 'left' }}>\r\n                            <h3>{this.state.selectedPlayerDetails.Name}</h3>\r\n\r\n                            </Col>\r\n\r\n                            <Col flex={2} style={{ textAlign: 'right' }}>\r\n                            <img src={this.state.selectedPlayerDetails.Photo} referrerpolicy=\"no-referrer\" alt={null} style={{height:'15vh'}}/>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                            <Row gutter='30' align='middle' justify='left'>\r\n                                <Col>\r\n                                <h5>{this.state.selectedPlayerDetails.Club}</h5>\r\n                                </Col>\r\n                                <Col>\r\n                                <h5>{this.state.selectedPlayerDetails.JerseyNumber}</h5>\r\n                                </Col>\r\n                                <Col>\r\n                                <h5>{this.state.selectedPlayerDetails.BestPosition}</h5>\r\n                                </Col>\r\n                            </Row>\r\n                            <br>\r\n                            </br>\r\n                            <Row gutter='30' align='middle' justify='left'>\r\n                                <Col>\r\n                                Age: {this.state.selectedPlayerDetails.Age}\r\n                                </Col>\r\n                                {/* TASK 28: add two more columns here for Height and Weight, with the appropriate labels as above */}\r\n                                <Col>\r\n                                Height: {this.state.selectedPlayerDetails.Height}\r\n                                </Col>\r\n                                <Col>\r\n                                Weight: {this.state.selectedPlayerDetails.Weight}\r\n                                </Col>\r\n\r\n                                <Col flex={2} style={{ textAlign: 'right' }}>\r\n                                {this.state.selectedPlayerDetails.Nationality}\r\n                                    <img src={this.state.selectedPlayerDetails.Flag} referrerpolicy=\"no-referrer\" alt={null} style={{height:'3vh', marginLeft: '1vw'}}/>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row gutter='30' align='middle' justify='left'>\r\n                                <Col>\r\n                                Value: {this.state.selectedPlayerDetails.Value}\r\n                                </Col>\r\n                                <Col>\r\n                                Release Clause: {this.state.selectedPlayerDetails.ReleaseClause}\r\n                                </Col>\r\n                                {/* TASK 29: Create 2 additional columns for the attributes 'Wage' and 'Contract Valid Until' (use spaces between the words when labelling!) */}\r\n                                <Col>\r\n                                Wage: {this.state.selectedPlayerDetails.Wage}\r\n                                </Col>\r\n                                <Col>\r\n                                Contract Valid Until: {this.state.selectedPlayerDetails.ContractValidUntil}\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n\r\n                    <Card style={{marginTop: '2vh'}}>\r\n                        <CardBody>\r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                            <Col flex={2} style={{ textAlign: 'left' }}>\r\n                            <h6>Skill</h6>\r\n                            <Rate disabled defaultValue={this.state.selectedPlayerDetails.Skill} />\r\n                            <h6>Reputation</h6>\r\n                            {/* TASK 30: create a star rating component for 'InternationalReputation'. Make sure you use the 'disabled' option as above to ensure it is read-only*/}\r\n                            <Rate disabled defaultValue={this.state.selectedPlayerDetails.InternationalReputation} />\r\n\r\n                            <Divider/>\r\n                            <h6>Best Rating</h6>\r\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.BestOverallRating} >{this.state.selectedPlayerDetails.BestOverallRating}</Progress>\r\n                                {/* TASK 31: create the headings and progress bars for 'Potential' and 'Rating'. Use the same style as the one above for 'Best Rating'.*/}\r\n                            <h6>Potential</h6>\r\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.Potential} >{this.state.selectedPlayerDetails.Potential}</Progress>\r\n                            <h6>Rating</h6>\r\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.Rating} >{this.state.selectedPlayerDetails.Rating}</Progress>\r\n                                </Col >\r\n                                <Col  push={2} flex={2}>\r\n                                {/*TASK 32: In case the player is a GK, show a radar chart (replacing 'null' below) with the labels: Agility, Ball Control, Passing, Positioning, Stamina, Strength */}\r\n\r\n                                    {this.state.selectedPlayerDetails.BestPosition === 'GK'?\r\n                                        <RadarChart\r\n                                            data={[this.state.selectedPlayerDetails]}\r\n                                            tickFormat={t => wideFormat(t)}\r\n                                            startingAngle={0}\r\n                                            domains={[\r\n                                                { name: 'Penalties', domain: [0, 100], getValue: d => d.GKPenalties },\r\n                                                { name: 'Diving', domain: [0, 100], getValue: d => d.GKDiving },\r\n                                                { name: 'Handling', domain: [0, 100], getValue: d => d.GKHandling },\r\n                                                { name: 'Kicking', domain: [0, 100], getValue: d => d.GKKicking },\r\n                                                { name: 'Positioning', domain: [0, 100], getValue: d => d.GKPositioning },\r\n                                                { name: 'Reflexes', domain: [0, 100], getValue: d => d.GKReflexes }\r\n                                            ]}\r\n                                            width={450}\r\n                                            height={400}\r\n                                        />\r\n                                        :\r\n                                        <RadarChart\r\n                                            data={[this.state.selectedPlayerDetails]}\r\n                                            tickFormat={t => wideFormat(t)}\r\n                                            startingAngle={0}\r\n                                            domains={[\r\n                                                { name: 'Agility', domain: [0, 100], getValue: d => d.NAdjustedAgility },\r\n                                                { name: 'Ball Control', domain: [0, 100], getValue: d => d.NBallControl },\r\n                                                { name: 'Passing', domain: [0, 100], getValue: d => d.NPassing },\r\n                                                { name: 'Positioning', domain: [0, 100], getValue: d => d.NPositioning },\r\n                                                { name: 'Stamina', domain: [0, 100], getValue: d => d.NStamina },\r\n                                                { name: 'Strength', domain: [0, 100], getValue: d => d.NStrength }\r\n                                            ]}\r\n                                            width={450}\r\n                                            height={400}\r\n                                    \r\n                                        />}\r\n                                \r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                </div> : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayersPage\r\n\r\n",["39","40"],"/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/fetcher.js",[],"/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/components/MenuBar.js",[],"/Users/ben/Desktop/CIS550/cis550_nba_project/webpage/client/src/pages/TeamsPage.js",["41"],{"ruleId":"42","severity":1,"message":"43","line":4,"column":3,"nodeType":"44","messageId":"45","endLine":4,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":7,"column":5,"nodeType":"44","messageId":"45","endLine":7,"endColumn":15},{"ruleId":"42","severity":1,"message":"46","line":2,"column":62,"nodeType":"44","messageId":"45","endLine":2,"endColumn":71},{"ruleId":"42","severity":1,"message":"43","line":6,"column":5,"nodeType":"44","messageId":"45","endLine":6,"endColumn":15},{"ruleId":"42","severity":1,"message":"47","line":7,"column":5,"nodeType":"44","messageId":"45","endLine":7,"endColumn":11},{"ruleId":"48","severity":1,"message":"49","line":199,"column":29,"nodeType":"50","endLine":199,"endColumn":144},{"ruleId":"48","severity":1,"message":"49","line":230,"column":37,"nodeType":"50","endLine":230,"endColumn":169},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"42","severity":1,"message":"43","line":7,"column":5,"nodeType":"44","messageId":"45","endLine":7,"endColumn":15},"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","'CardTitle' is defined but never used.","'Select' is defined but never used.","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","JSXOpeningElement","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-global-assign","no-unsafe-negation"]